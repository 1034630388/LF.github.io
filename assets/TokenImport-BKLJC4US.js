import{a2 as Ie,f as h,b as R,i as k,w as o,u as i,d as t,s as We,v as ze,y as Le,r as S,l as G,z as Fe,o as je,c as E,a as r,n as y,j as T,N as g,t as C,F as Be,g as Pe,q as H,p as ee,e as Ne,E as x}from"./index-wKIbGhGo.js";import{_ as Oe}from"./xiaoyugan-Dwisk7G8.js";import{K as qe}from"./ThemeToggle.vue_vue_type_style_index_0_scoped_89126448_lang-BjYg0yWP.js";import{_ as re}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{S as De,M as Ve}from"./Sunny-DXo3UMBW.js";import{A as se}from"./Add-DyUH0i3w.js";import{C as te}from"./CloudUpload-bfszKK-e.js";import{H as oe}from"./Home-Bl2Fl15-.js";import{M as Ge,S as He}from"./Star-BFyi0QRs.js";import{E as Je}from"./EllipsisHorizontal-BXjMV4b_.js";import{R as ne}from"./Refresh-B4apZMLB.js";import{S as Ke,T as Xe}from"./TrashBin-BdQjjFcw.js";import{C as Ye}from"./Create-DecgUSGI.js";import{C as Ze}from"./Copy-B4mkBN3W.js";const Qe={__name:"ThemeToggle",setup(J){const{isDark:v,toggleTheme:$}=Ie();return(l,A)=>{const a=h("n-icon"),w=h("n-button");return k(),R(w,{circle:"",size:"medium",class:"theme-toggle",onClick:i($)},{icon:o(()=>[i(v)?(k(),R(a,{key:0},{default:o(()=>[t(i(De))]),_:1})):(k(),R(a,{key:1},{default:o(()=>[t(i(Ve))]),_:1}))]),_:1},8,["onClick"])}}},es=re(Qe,[["__scopeId","data-v-89126448"]]),ss={class:"token-import-page"},ts={class:"container"},os={class:"page-header"},ns={class:"header-content"},rs={class:"header-top"},as={key:0,class:"import-section"},ls={class:"import-card"},is={class:"card-header"},cs={class:"optional-fields"},us={class:"form-actions"},ds={class:"optional-fields"},ms={class:"form-actions"},ps={key:1,class:"tokens-section"},vs={class:"section-header"},fs={class:"header-actions"},ks={class:"tokens-grid"},Ts=["onClick"],gs={class:"card-header"},_s={class:"token-info"},hs={class:"token-name"},bs=["title"],ws={class:"token-meta"},ys={key:0,class:"meta-item"},Us={class:"connection-status"},Ss={class:"card-actions"},Cs={class:"card-body"},xs={class:"token-display"},$s={class:"token-value"},Es={class:"connection-status"},Rs={class:"status-indicator"},Ms={class:"status-text"},As={class:"connection-actions"},Is={class:"token-timestamps"},Ws={class:"timestamp-item"},zs={class:"timestamp-value"},Ls={class:"timestamp-item"},Fs={class:"timestamp-value"},js={class:"storage-info"},Bs={class:"storage-item"},Ps={key:0,class:"storage-upgrade"},Ns={key:0,class:"card-footer"},Os={key:2,class:"empty-state"},qs={class:"modal-actions"},Ds={__name:"TokenImport",props:{token:String,name:String,server:String,wsUrl:String,api:String,auto:Boolean},setup(J){const v=J,$=Ne(),l=We(),A=ze(),a=Le(),w=S(!1),M=S(!1),W=S(!1),B=S(null),P=S(null),N=S(null),F=S(null),z=S("manual"),O=S(new Set),q=S(new Set),f=G({name:"",base64Token:"",server:"",wsUrl:""}),m=G({name:"",url:"",server:"",wsUrl:""}),_=G({name:"",token:"",server:"",wsUrl:""}),ae={name:[{required:!0,message:"请输入Token名称",trigger:"blur"}],base64Token:[{required:!0,message:"请输入Base64 Token",trigger:"blur"}]},le={name:[{required:!0,message:"请输入Token名称",trigger:"blur"}],url:[{required:!0,message:"请输入Token获取地址",trigger:"blur"},{type:"url",message:"请输入有效的URL地址",trigger:"blur"}]},ie={name:[{required:!0,message:"请输入Token名称",trigger:"blur"}],token:[{required:!0,message:"请输入Token字符串",trigger:"blur"}]},ce=[{label:"导出所有Token",key:"export"},{label:"导入Token文件",key:"import"},{label:"清理过期Token",key:"clean"},{label:"断开所有连接",key:"disconnect"},{label:"清除所有Token",key:"clear"}],ue=async()=>{var s;if(B.value)try{await B.value.validate(),M.value=!0;const e=a.importBase64Token(f.name,f.base64Token,{server:f.server,wsUrl:f.wsUrl,importMethod:"manual"});if(e.success)l.success(e.message),e.details,pe(),w.value=!1;else{const u=e.error||e.message||"Token导入失败";l.error(u),console.error("Token导入错误详情:",{error:e.error,message:e.message,originalToken:((s=f.base64Token)==null?void 0:s.substring(0,50))+"..."})}}catch{}finally{M.value=!1}},de=async()=>{var s;if(P.value)try{await P.value.validate(),M.value=!0;let e;if(m.url.startsWith(window.location.origin)||m.url.startsWith("/")||m.url.startsWith("http://localhost")||m.url.startsWith("http://127.0.0.1"))e=await fetch(m.url);else try{e=await fetch(m.url,{method:"GET",headers:{Accept:"application/json"},mode:"cors"})}catch(p){throw new Error(`跨域请求被阻止。请确保目标服务器支持CORS，或使用浏览器扩展/代理服务器。错误详情: ${p.message}`)}if(!e.ok)throw new Error(`请求失败: ${e.status} ${e.statusText}`);const d=await e.json();if(!d.token)throw new Error("返回数据中未找到token字段");const c=a.importBase64Token(m.name,d.token,{server:m.server||d.server,wsUrl:m.wsUrl,sourceUrl:m.url,importMethod:"url"});if(c.success)l.success(c.message),c.details,ve(),w.value=!1;else{const p=c.error||c.message||"URL Token导入失败";l.error(p),console.error("URL Token导入错误详情:",{error:c.error,message:c.message,sourceUrl:m.url,receivedToken:((s=d==null?void 0:d.token)==null?void 0:s.substring(0,50))+"..."})}}catch(e){console.error("URL获取Token失败:",e),l.error(e.message||"URL获取Token失败")}finally{M.value=!1}},j=async s=>{O.value.add(s.id);try{if(s.sourceUrl){let e;if(s.sourceUrl.startsWith(window.location.origin)||s.sourceUrl.startsWith("/")||s.sourceUrl.startsWith("http://localhost")||s.sourceUrl.startsWith("http://127.0.0.1"))e=await fetch(s.sourceUrl);else try{e=await fetch(s.sourceUrl,{method:"GET",headers:{Accept:"application/json"},mode:"cors"})}catch(c){throw new Error(`跨域请求被阻止。请确保目标服务器支持CORS。错误详情: ${c.message}`)}if(!e.ok)throw new Error(`请求失败: ${e.status} ${e.statusText}`);const d=await e.json();if(!d.token)throw new Error("返回数据中未找到token字段");a.updateToken(s.id,{token:d.token,server:d.server||s.server,lastRefreshed:Date.now()}),l.success("Token刷新成功")}else{A.info({title:"重新获取Token",content:`Token "${s.name}" 是手动导入的，没有配置自动刷新地址。

请选择以下操作：
1. 重新手动导入新的Token
2. 尝试重新连接现有Token`,positiveText:"重新导入",negativeText:"重新连接",onPositiveClick:()=>{w.value=!0,z.value="manual",f.name=s.name,f.server=s.server,f.wsUrl=s.wsUrl},onNegativeClick:()=>{a.getWebSocketStatus(s.id)==="connected"&&a.closeWebSocketConnection(s.id),setTimeout(()=>{a.createWebSocketConnection(s.id,s.token,s.wsUrl),l.info("正在尝试重新连接...")},500)}});return}a.getWebSocketStatus(s.id)==="connected"&&(a.closeWebSocketConnection(s.id),setTimeout(()=>{a.createWebSocketConnection(s.id,s.token,s.wsUrl)},500))}catch(e){console.error("刷新Token失败:",e),l.error(e.message||"Token刷新失败")}finally{O.value.delete(s.id)}},me=s=>{A.warning({title:"升级为长期有效",content:`确认要将Token "${s.name}" 升级为长期有效吗？升级后该Token将不会因24小时未使用而被自动清理。`,positiveText:"确认升级",negativeText:"取消",onPositiveClick:()=>{a.upgradeTokenToPermanent(s.id)?l.success(`Token "${s.name}" 已升级为长期有效！`):l.error("升级失败，该Token可能已经是长期有效状态")}})},pe=()=>{Object.keys(f).forEach(s=>{f[s]=""})},ve=()=>{Object.keys(m).forEach(s=>{m[s]=""})},fe=(s,e=!1)=>{const u=a.selectedTokenId===s.id,d=U(s.id);if(u&&d==="connected"&&!e){l.info(`${s.name} 已选中且已连接`);return}if(u&&d==="connecting"&&!e){l.info(`${s.name} 正在连接中...`);return}a.selectToken(s.id,e)?e?l.success(`强制重连：${s.name}`):u?l.success(`重新连接：${s.name}`):l.success(`已选择：${s.name}`):l.error(`选择Token失败：${s.name}`)},U=s=>a.getWebSocketStatus(s),D=s=>{const e=U(s);return{connected:"已连接",connecting:"连接中...",disconnected:"已断开",error:"连接错误",disconnecting:"断开中..."}[e]||"未连接"},ke=s=>{const e=[{label:"编辑",key:"edit",icon:()=>x(g,null,{default:()=>x(Ye)})},{label:"复制Token",key:"copy",icon:()=>x(g,null,{default:()=>x(Ze)})}];return s.importMethod==="url"&&s.sourceUrl?e.push({label:"从URL刷新",key:"refresh-url",icon:()=>x(g,null,{default:()=>x(Ke)})}):e.push({label:"重新获取",key:"refresh",icon:()=>x(g,null,{default:()=>x(ne)})}),e.push({type:"divider"},{label:"删除",key:"delete",icon:()=>x(g,null,{default:()=>x(Xe)}),props:{style:{color:"#e74c3c"}}}),e},Te=async(s,e)=>{switch(s){case"edit":ge(e);break;case"copy":he(e);break;case"refresh":j(e);break;case"refresh-url":j(e);break;case"delete":be(e);break}},ge=s=>{F.value=s,Object.assign(_,{name:s.name,token:s.token,server:s.server||"",wsUrl:s.wsUrl||""}),W.value=!0},_e=async()=>{if(!(!N.value||!F.value))try{await N.value.validate(),a.updateToken(F.value.id,{name:_.name,token:_.token,server:_.server,wsUrl:_.wsUrl}),l.success("Token信息已更新"),W.value=!1,F.value=null}catch{}},he=async s=>{try{await navigator.clipboard.writeText(s.token),l.success("Token已复制到剪贴板")}catch{l.error("复制失败")}},be=s=>{A.warning({title:"删除Token",content:`确定要删除Token "${s.name}" 吗？此操作无法恢复。`,positiveText:"确定删除",negativeText:"取消",onPositiveClick:()=>{a.removeToken(s.id),l.success("Token已删除")}})},we=s=>{switch(s){case"export":ye();break;case"import":Ue();break;case"clean":Se();break;case"disconnect":Ce();break;case"clear":xe();break}},ye=()=>{try{const s=a.exportTokens(),e=JSON.stringify(s,null,2),u=new Blob([e],{type:"application/json"}),d=document.createElement("a");d.href=URL.createObjectURL(u),d.download=`tokens_backup_${new Date().toISOString().split("T")[0]}.json`,d.click(),l.success("Token数据已导出")}catch{l.error("导出失败")}},Ue=()=>{const s=document.createElement("input");s.type="file",s.accept=".json",s.onchange=e=>{const u=e.target.files[0];if(u){const d=new FileReader;d.onload=c=>{try{const p=JSON.parse(c.target.result),I=a.importTokens(p);I.success?l.success(I.message):l.error(I.message)}catch{l.error("文件格式错误")}},d.readAsText(u)}},s.click()},Se=()=>{const s=a.cleanExpiredTokens();l.success(`已清理 ${s} 个过期Token`)},Ce=()=>{a.gameTokens.forEach(s=>{a.closeWebSocketConnection(s.id)}),l.success("所有连接已断开")},xe=()=>{A.error({title:"清除所有Token",content:"确定要清除所有Token吗？此操作无法恢复！",positiveText:"确定清除",negativeText:"取消",onPositiveClick:()=>{a.clearAllTokens(),l.success("所有Token已清除")}})},$e=s=>{if(!s)return"";const e=s.length;return e<=8?s:s.substring(0,4)+"***"+s.substring(e-4)},K=s=>new Date(s).toLocaleString("zh-CN"),Ee=()=>{$.push("/admin/dashboard")},X=async s=>{q.value.add(s.id);try{if(U(s.id)==="connected"){l.success(`${s.name} 已连接，进入任务管理`),$.push("/admin/dashboard");return}l.info(`正在探测 ${s.name} 的连接状态...`);try{await a.createWebSocketConnection(s.id,s.token,s.wsUrl);let u=0;const d=30;for(;u<d;){await new Promise(p=>setTimeout(p,100));const c=U(s.id);if(c==="connected"){l.success(`${s.name} 连接成功，进入任务管理`),$.push("/admin/dashboard");return}if(c==="error")throw new Error("连接失败");u++}throw new Error("连接超时")}catch(u){console.error("连接探测失败:",u),A.warning({title:"连接失败",content:`无法连接到 ${s.name}。可能的原因：

1. Token已过期或无效
2. 网络连接问题
3. 服务器维护中

是否要刷新Token后重试，还是直接进入离线模式？`,positiveText:"刷新Token",negativeText:"离线模式",onPositiveClick:async()=>{try{await j(s),setTimeout(()=>X(s),1e3)}catch{l.error("Token刷新失败，请检查网络或手动重新导入")}},onNegativeClick:()=>{l.info("进入离线模式，部分功能可能不可用"),$.push("/admin/dashboard")}})}}finally{q.value.delete(s.id)}},Y=async()=>{if(v.token||v.api)try{M.value=!0;let s=null;if(v.api){l.info("正在从API获取token...");const e=await fetch(v.api,{method:"GET",headers:{Accept:"application/json"},mode:"cors"});if(!e.ok)throw new Error(`API请求失败: ${e.status} ${e.statusText}`);const u=await e.json();if(!u.token)throw new Error("API返回数据中未找到token字段");s=a.importBase64Token(v.name||u.name||"通过API导入的Token",u.token,{server:v.server||u.server,wsUrl:v.wsUrl,sourceUrl:v.api,importMethod:"url"})}else v.token&&(l.info("正在导入token..."),s=a.importBase64Token(v.name||"通过URL导入的Token",v.token,{server:v.server,wsUrl:v.wsUrl,importMethod:"url"}));if(s&&s.success)l.success(`Token "${s.tokenName}" 导入成功！`),v.auto&&s.token?(a.selectToken(s.token.id),l.success("正在跳转到控制台..."),setTimeout(()=>{$.push("/admin/dashboard")},1500)):$.replace("/tokens");else throw new Error((s==null?void 0:s.message)||"Token导入失败")}catch(s){console.error("URL参数处理失败:",s),l.error(`导入失败: ${s.message}`),$.replace("/tokens")}finally{M.value=!1}};return Fe(()=>[v.token,v.api],Y,{immediate:!1}),je(async()=>{a.initTokenStore(),await Y(),!a.hasTokens&&!v.token&&!v.api&&(w.value=!0)}),(s,e)=>{const u=h("n-radio-button"),d=h("n-radio-group"),c=h("n-input"),p=h("n-form-item"),I=h("n-collapse-item"),Z=h("n-collapse"),b=h("n-button"),V=h("n-form"),Q=h("n-dropdown"),Re=h("n-tag"),Me=h("n-empty"),Ae=h("n-modal");return k(),E("div",ss,[r("div",ts,[r("div",os,[r("div",ns,[r("div",rs,[e[18]||(e[18]=r("img",{src:Oe,alt:"XYZW",class:"brand-logo"},null,-1)),t(es)]),e[19]||(e[19]=r("h1",null,"游戏Token管理",-1))])]),!i(a).hasTokens||w.value?(k(),E("div",as,[r("div",ls,[r("div",is,[r("h2",null,[t(i(g),null,{default:o(()=>[t(i(se))]),_:1}),e[20]||(e[20]=T(" 添加游戏Token ",-1))]),t(d,{value:z.value,"onUpdate:value":e[0]||(e[0]=n=>z.value=n),class:"import-method-tabs",size:"small"},{default:o(()=>[t(u,{value:"manual"},{default:o(()=>[...e[21]||(e[21]=[T(" 手动输入 ",-1)])]),_:1}),t(u,{value:"url"},{default:o(()=>[...e[22]||(e[22]=[T(" URL获取 ",-1)])]),_:1})]),_:1},8,["value"])]),z.value==="manual"?(k(),R(V,{key:0,ref_key:"importFormRef",ref:B,model:f,rules:ae,"label-placement":"top",size:"large","show-label":!0},{default:o(()=>[t(p,{label:"游戏角色名称",path:"name","show-label":!0},{default:o(()=>[t(c,{value:f.name,"onUpdate:value":e[1]||(e[1]=n=>f.name=n),placeholder:"例如：主号战士",clearable:""},null,8,["value"])]),_:1}),t(p,{label:"Token字符串",path:"base64Token","show-label":!0},{default:o(()=>[t(c,{value:f.base64Token,"onUpdate:value":e[2]||(e[2]=n=>f.base64Token=n),type:"textarea",rows:3,placeholder:"粘贴Token字符串...",clearable:""},null,8,["value"])]),_:1}),t(Z,null,{default:o(()=>[t(I,{title:"角色详情 (可选)",name:"optional"},{default:o(()=>[r("div",cs,[t(p,{label:"服务器"},{default:o(()=>[t(c,{value:f.server,"onUpdate:value":e[3]||(e[3]=n=>f.server=n),placeholder:"服务器名称"},null,8,["value"])]),_:1}),t(p,{label:"自定义连接地址"},{default:o(()=>[t(c,{value:f.wsUrl,"onUpdate:value":e[4]||(e[4]=n=>f.wsUrl=n),placeholder:"留空使用默认连接"},null,8,["value"])]),_:1})])]),_:1})]),_:1}),r("div",us,[t(b,{type:"primary",size:"large",block:"",loading:M.value,onClick:ue},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(te))]),_:1})]),default:o(()=>[e[23]||(e[23]=T(" 添加Token ",-1))]),_:1},8,["loading"]),i(a).hasTokens?(k(),R(b,{key:0,size:"large",block:"",onClick:e[5]||(e[5]=n=>w.value=!1)},{default:o(()=>[...e[24]||(e[24]=[T(" 取消 ",-1)])]),_:1})):y("",!0)])]),_:1},8,["model"])):y("",!0),z.value==="url"?(k(),R(V,{key:1,ref_key:"urlFormRef",ref:P,model:m,rules:le,"label-placement":"top",size:"large"},{default:o(()=>[t(p,{label:"游戏角色名称",path:"name"},{default:o(()=>[t(c,{value:m.name,"onUpdate:value":e[6]||(e[6]=n=>m.name=n),placeholder:"例如：主号战士",clearable:""},null,8,["value"])]),_:1}),t(p,{label:"Token获取地址",path:"url"},{feedback:o(()=>[...e[25]||(e[25]=[r("div",{class:"form-tips"},[r("span",{class:"form-tip"}," 接口应返回包含token字段的JSON数据 "),r("span",{class:"form-tip cors-tip"}," 注意：如果是跨域URL，服务器需要支持CORS，否则会被浏览器阻止 ")],-1)])]),default:o(()=>[t(c,{value:m.url,"onUpdate:value":e[7]||(e[7]=n=>m.url=n),placeholder:"输入API接口地址...",clearable:""},null,8,["value"])]),_:1}),t(Z,null,{default:o(()=>[t(I,{title:"角色详情 (可选)",name:"optional"},{default:o(()=>[r("div",ds,[t(p,{label:"服务器"},{default:o(()=>[t(c,{value:m.server,"onUpdate:value":e[8]||(e[8]=n=>m.server=n),placeholder:"服务器名称"},null,8,["value"])]),_:1}),t(p,{label:"自定义连接地址"},{default:o(()=>[t(c,{value:m.wsUrl,"onUpdate:value":e[9]||(e[9]=n=>m.wsUrl=n),placeholder:"留空使用默认连接"},null,8,["value"])]),_:1})])]),_:1})]),_:1}),r("div",ms,[t(b,{type:"primary",size:"large",block:"",loading:M.value,onClick:de},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(te))]),_:1})]),default:o(()=>[e[26]||(e[26]=T(" 获取并添加Token ",-1))]),_:1},8,["loading"]),i(a).hasTokens?(k(),R(b,{key:0,size:"large",block:"",onClick:e[10]||(e[10]=n=>w.value=!1)},{default:o(()=>[...e[27]||(e[27]=[T(" 取消 ",-1)])]),_:1})):y("",!0)])]),_:1},8,["model"])):y("",!0)])])):y("",!0),i(a).hasTokens?(k(),E("div",ps,[r("div",vs,[r("h2",null,"我的Token列表 ("+C(i(a).gameTokens.length)+"个)",1),r("div",fs,[i(a).selectedToken?(k(),R(b,{key:0,type:"success",onClick:Ee},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(oe))]),_:1})]),default:o(()=>[e[28]||(e[28]=T(" 返回控制台 ",-1))]),_:1})):y("",!0),w.value?y("",!0):(k(),R(b,{key:1,type:"primary",onClick:e[11]||(e[11]=n=>w.value=!0)},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(se))]),_:1})]),default:o(()=>[e[29]||(e[29]=T(" 添加Token ",-1))]),_:1})),t(Q,{options:ce,onSelect:we},{default:o(()=>[t(b,null,{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(Ge))]),_:1})]),default:o(()=>[e[30]||(e[30]=T(" 批量操作 ",-1))]),_:1})]),_:1})])]),r("div",ks,[(k(!0),E(Be,null,Pe(i(a).gameTokens,n=>(k(),E("div",{key:n.id,class:H(["token-card",{active:n.id===i(a).selectedTokenId,connected:U(n.id)==="connected"}]),onClick:L=>fe(n)},[r("div",gs,[r("div",_s,[r("h3",hs,[T(C(n.name)+" ",1),r("span",{class:H(["connection-indicator",{connected:U(n.id)==="connected",connecting:U(n.id)==="connecting",disconnected:U(n.id)==="disconnected"||!U(n.id),error:U(n.id)==="error"}]),title:D(n.id)},null,10,bs)]),r("div",ws,[n.server?(k(),E("span",ys,C(n.server),1)):y("",!0),r("span",Us,C(D(n.id)),1)])]),r("div",Ss,[t(Q,{options:ke(n),onSelect:L=>Te(L,n)},{default:o(()=>[t(b,{text:""},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(Je))]),_:1})]),_:1})]),_:1},8,["options","onSelect"])])]),r("div",Cs,[r("div",xs,[e[31]||(e[31]=r("span",{class:"token-label"},"Token:",-1)),r("code",$s,C($e(n.token)),1)]),r("div",Es,[r("div",Rs,[r("span",{class:H(["status-dot",U(n.id)])},null,2),r("span",Ms,C(D(n.id)),1)]),r("div",As,[t(b,{size:"small",type:"default",loading:O.value.has(n.id),onClick:ee(L=>j(n),["stop"])},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(ne))]),_:1})]),default:o(()=>[T(" "+C(n.sourceUrl?"刷新":"重新获取"),1)]),_:2},1032,["loading","onClick"])])]),r("div",Is,[r("div",Ws,[e[32]||(e[32]=r("span",{class:"timestamp-label"},"创建：",-1)),r("span",zs,C(K(n.createdAt)),1)]),r("div",Ls,[e[33]||(e[33]=r("span",{class:"timestamp-label"},"使用：",-1)),r("span",Fs,C(K(n.lastUsed)),1)])]),r("div",js,[r("div",Bs,[e[34]||(e[34]=r("span",{class:"storage-label"},"存储类型：",-1)),t(Re,{size:"small",type:n.importMethod==="url"?"success":"warning"},{default:o(()=>[T(C(n.importMethod==="url"?"长期有效":"临时存储"),1)]),_:2},1032,["type"])]),n.importMethod!=="url"?(k(),E("div",Ps,[t(b,{size:"tiny",type:"success",ghost:"",onClick:ee(L=>me(n),["stop"])},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(He))]),_:1})]),default:o(()=>[e[35]||(e[35]=T(" 升级为长期有效 ",-1))]),_:1},8,["onClick"])])):y("",!0)])]),n.id===i(a).selectedTokenId?(k(),E("div",Ns,[t(b,{type:"primary",size:"large",block:"",loading:q.value.has(n.id),onClick:L=>X(n)},{icon:o(()=>[t(i(g),null,{default:o(()=>[t(i(oe))]),_:1})]),default:o(()=>[e[36]||(e[36]=T(" 开始任务管理 ",-1))]),_:1},8,["loading","onClick"])])):y("",!0)],10,Ts))),128))])])):y("",!0),!i(a).hasTokens&&!w.value?(k(),E("div",Os,[t(Me,{size:"large",description:"还没有导入任何Token"},{icon:o(()=>[t(i(g),{size:"64"},{default:o(()=>[t(i(qe))]),_:1})]),_:1})])):y("",!0)]),t(Ae,{show:W.value,"onUpdate:show":e[17]||(e[17]=n=>W.value=n),preset:"card",title:"编辑Token",style:{width:"500px"}},{footer:o(()=>[r("div",qs,[t(b,{onClick:e[16]||(e[16]=n=>W.value=!1)},{default:o(()=>[...e[37]||(e[37]=[T(" 取消 ",-1)])]),_:1}),t(b,{type:"primary",onClick:_e},{default:o(()=>[...e[38]||(e[38]=[T(" 保存 ",-1)])]),_:1})])]),default:o(()=>[t(V,{ref_key:"editFormRef",ref:N,model:_,rules:ie,"label-placement":"left","label-width":"80px"},{default:o(()=>[t(p,{label:"名称",path:"name"},{default:o(()=>[t(c,{value:_.name,"onUpdate:value":e[12]||(e[12]=n=>_.name=n)},null,8,["value"])]),_:1}),t(p,{label:"Token字符串",path:"token"},{default:o(()=>[t(c,{value:_.token,"onUpdate:value":e[13]||(e[13]=n=>_.token=n),type:"textarea",rows:3,placeholder:"粘贴Token字符串...",clearable:""},null,8,["value"])]),_:1}),t(p,{label:"服务器"},{default:o(()=>[t(c,{value:_.server,"onUpdate:value":e[14]||(e[14]=n=>_.server=n)},null,8,["value"])]),_:1}),t(p,{label:"WebSocket地址"},{default:o(()=>[t(c,{value:_.wsUrl,"onUpdate:value":e[15]||(e[15]=n=>_.wsUrl=n)},null,8,["value"])]),_:1})]),_:1},8,["model"])]),_:1},8,["show"])])}}},rt=re(Ds,[["__scopeId","data-v-bd5911ba"]]);export{rt as default};
