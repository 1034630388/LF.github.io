import{g as $,u as P,_ as R,s as A,j as G,a as M,e as E}from"./index-xPc3ULf4.js";import{S as j,s as k}from"./index-DikGr7Uh.js";import{k as y,S as N,I as f,l as F,d as n,U as I,W as w,o as O,c as K,i as T,K as q,q as D,a5 as U,F as V}from"./index-wKIbGhGo.js";const x=Symbol("ArcoCard");var S=y({name:"Card",components:{Spin:j},props:{bordered:{type:Boolean,default:!0},loading:{type:Boolean,default:!1},hoverable:{type:Boolean,default:!1},size:{type:String},headerStyle:{type:Object,default:()=>({})},bodyStyle:{type:Object,default:()=>({})},title:{type:String},extra:{type:String}},setup(e,{slots:t}){const a=$("card"),{size:l}=N(e),{mergedSize:d}=P(l),u=f(()=>d.value==="small"||d.value==="mini"?"small":"medium"),m=r=>{const c=k(r);return n("div",{class:`${a}-actions`},[n("div",{class:`${a}-actions-right`},[c.map((o,v)=>n("span",{key:`action-${v}`,class:`${a}-actions-item`},[o]))])])},i=F({hasMeta:!1,hasGrid:!1,slots:t,renderActions:m});I(x,i);const s=f(()=>[a,`${a}-size-${u.value}`,{[`${a}-loading`]:e.loading,[`${a}-bordered`]:e.bordered,[`${a}-hoverable`]:e.hoverable,[`${a}-contain-grid`]:i.hasGrid}]);return()=>{var r,c,o,v,g,z,B;const h=!!((r=t.title)!=null?r:e.title),p=!!((c=t.extra)!=null?c:e.extra);return n("div",{class:s.value},[(h||p)&&n("div",{class:[`${a}-header`,{[`${a}-header-no-title`]:!h}],style:e.headerStyle},[h&&n("div",{class:`${a}-header-title`},[(v=(o=t.title)==null?void 0:o.call(t))!=null?v:e.title]),p&&n("div",{class:`${a}-header-extra`},[(z=(g=t.extra)==null?void 0:g.call(t))!=null?z:e.extra])]),t.cover&&n("div",{class:`${a}-cover`},[t.cover()]),n("div",{class:`${a}-body`,style:e.bodyStyle},[e.loading?n(j,null,null):(B=t.default)==null?void 0:B.call(t),t.actions&&!i.hasMeta&&m(t.actions())])])}}}),_=y({name:"CardMeta",props:{title:{type:String},description:{type:String}},setup(e,{slots:t}){const a=$("card-meta"),l=w(x);return O(()=>{l&&(l.hasMeta=!0)}),()=>{var d,u,m,i,s,r;const c=!!((d=t.title)!=null?d:e.title),o=!!((u=t.description)!=null?u:e.description);return n("div",{class:a},[(c||o)&&n("div",{class:`${a}-content`},[c&&n("div",{class:`${a}-title`},[(i=(m=t.title)==null?void 0:m.call(t))!=null?i:e.title]),o&&n("div",{class:`${a}-description`},[(r=(s=t.description)==null?void 0:s.call(t))!=null?r:e.description])]),(t.avatar||(l==null?void 0:l.slots.actions))&&n("div",{class:[`${a}-footer `,{[`${a}-footer-only-actions`]:!t.avatar}]},[t.avatar&&n("div",{class:`${a}-avatar`},[t.avatar()]),l&&l.slots.actions&&l.renderActions(l.slots.actions())])])}}});const W=y({name:"CardGrid",props:{hoverable:{type:Boolean,default:!1}},setup(e){const t=$("card-grid"),a=w(x);return O(()=>{a&&(a.hasGrid=!0)}),{cls:f(()=>[t,{[`${t}-hoverable`]:e.hoverable}])}}});function H(e,t,a,l,d,u){return T(),K("div",{class:D(e.cls)},[q(e.$slots,"default")],2)}var b=R(W,[["render",H]]);const X=Object.assign(S,{Meta:_,Grid:b,install:(e,t)=>{A(e,t);const a=G(t);e.component(a+S.name,S),e.component(a+_.name,_),e.component(a+b.name,b)}});var C=y({name:"Space",props:{align:{type:String},direction:{type:String,default:"horizontal"},size:{type:[Number,String,Array],default:"small"},wrap:{type:Boolean},fill:{type:Boolean}},setup(e,{slots:t}){const a=$("space"),l=f(()=>{var i;return(i=e.align)!=null?i:e.direction==="horizontal"?"center":""}),d=f(()=>[a,{[`${a}-${e.direction}`]:e.direction,[`${a}-align-${l.value}`]:l.value,[`${a}-wrap`]:e.wrap,[`${a}-fill`]:e.fill}]);function u(i){if(E(i))return i;switch(i){case"mini":return 4;case"small":return 8;case"medium":return 16;case"large":return 24;default:return 8}}const m=i=>{const s={},r=`${u(M(e.size)?e.size[0]:e.size)}px`,c=`${u(M(e.size)?e.size[1]:e.size)}px`;return i?e.wrap?{marginBottom:c}:{}:(e.direction==="horizontal"&&(s.marginRight=r),(e.direction==="vertical"||e.wrap)&&(s.marginBottom=c),s)};return()=>{var i;const s=k((i=t.default)==null?void 0:i.call(t),!0).filter(r=>r.type!==U);return n("div",{class:d.value},[s.map((r,c)=>{var o,v;const g=t.split&&c>0;return n(V,{key:(o=r.key)!=null?o:`item-${c}`},[g&&n("div",{class:`${a}-item-split`,style:m(!1)},[(v=t.split)==null?void 0:v.call(t)]),n("div",{class:`${a}-item`,style:m(c===s.length-1)},[r])])})])}}});const Y=Object.assign(C,{install:(e,t)=>{A(e,t);const a=G(t);e.component(a+C.name,C)}});export{X as C,Y as S};
